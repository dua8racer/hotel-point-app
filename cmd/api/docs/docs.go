// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/dates/special": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get special dates for a date range (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-dates"
                ],
                "summary": "Get special dates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "From Date (YYYY-MM-DD)",
                        "name": "from_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "To Date (YYYY-MM-DD)",
                        "name": "to_date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.APISuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Set a special date with custom point cost (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-dates"
                ],
                "summary": "Set special date",
                "parameters": [
                    {
                        "description": "Special Date Information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SpecialDateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.APISuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/dates/special/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a special date (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-dates"
                ],
                "summary": "Delete special date",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Date Rule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.APISuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/hotels": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new hotel (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-hotels"
                ],
                "summary": "Create a new hotel",
                "parameters": [
                    {
                        "description": "Hotel Information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateHotelRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.APISuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/hotels/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update hotel information (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-hotels"
                ],
                "summary": "Update a hotel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hotel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Hotel Information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateHotelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.APISuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a hotel (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-hotels"
                ],
                "summary": "Delete a hotel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hotel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.APISuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/rooms": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new room in a hotel (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-rooms"
                ],
                "summary": "Create a new room",
                "parameters": [
                    {
                        "description": "Room Information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateRoomRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.APISuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/rooms/availability": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Set room availability for a date range (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-rooms"
                ],
                "summary": "Set room availability",
                "parameters": [
                    {
                        "description": "Room Availability Information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RoomAvailabilityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.APISuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/rooms/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update room information (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-rooms"
                ],
                "summary": "Update a room",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Room Information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateRoomRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.APISuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a room (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-rooms"
                ],
                "summary": "Delete a room",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.APISuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/rooms/{id}/availability": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get room availability for a date range (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-rooms"
                ],
                "summary": "Get room availability",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "From Date (YYYY-MM-DD)",
                        "name": "from_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "To Date (YYYY-MM-DD)",
                        "name": "to_date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.APISuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticate a user and return a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login Credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user and create a user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User Registration Info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.APISuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/bookings": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all bookings for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Get user bookings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Booking"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new room booking using points",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Create a new booking",
                "parameters": [
                    {
                        "description": "Booking Information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateBookingRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Booking"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/bookings/active": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all active (upcoming) bookings for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Get active bookings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Booking"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/bookings/calculate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Calculate the point cost for a booking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Calculate booking point cost",
                "parameters": [
                    {
                        "description": "Booking Information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CalculatePointCostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CalculatePointCostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/bookings/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a specific booking by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Get booking details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Booking"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/bookings/{id}/cancel": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cancel a booking and refund points",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Cancel booking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Cancellation Information",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/handlers.CancelBookingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.APISuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/hotels": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all hotels for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hotels"
                ],
                "summary": "Get hotels",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Hotel"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AuthResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "handlers.CalculatePointCostRequest": {
            "type": "object",
            "required": [
                "check_in",
                "check_out",
                "room_id"
            ],
            "properties": {
                "check_in": {
                    "description": "Format YYYY-MM-DD",
                    "type": "string",
                    "example": "2025-06-01"
                },
                "check_out": {
                    "description": "Format YYYY-MM-DD",
                    "type": "string",
                    "example": "2025-06-05"
                },
                "room_id": {
                    "type": "string",
                    "example": "60f1a5c29f48e1a8e8a8b123"
                }
            }
        },
        "handlers.CalculatePointCostResponse": {
            "type": "object",
            "properties": {
                "daily_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.DailyPointCost"
                    }
                },
                "point_cost": {
                    "type": "integer"
                }
            }
        },
        "handlers.CancelBookingRequest": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string",
                    "example": "Change of plans"
                }
            }
        },
        "handlers.CreateBookingRequest": {
            "type": "object",
            "required": [
                "check_in",
                "check_out",
                "hotel_id",
                "room_id"
            ],
            "properties": {
                "check_in": {
                    "description": "Format YYYY-MM-DD",
                    "type": "string",
                    "example": "2025-06-01"
                },
                "check_out": {
                    "description": "Format YYYY-MM-DD",
                    "type": "string",
                    "example": "2025-06-05"
                },
                "hotel_id": {
                    "type": "string",
                    "example": "60f1a5c29f48e1a8e8a8b122"
                },
                "room_id": {
                    "type": "string",
                    "example": "60f1a5c29f48e1a8e8a8b123"
                }
            }
        },
        "handlers.CreateHotelRequest": {
            "type": "object",
            "required": [
                "address",
                "city",
                "description",
                "name"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Jl. MH Thamrin No. 1"
                },
                "city": {
                    "type": "string",
                    "example": "Jakarta"
                },
                "description": {
                    "type": "string",
                    "example": "Hotel bintang 5 di pusat Jakarta"
                },
                "image": {
                    "type": "string",
                    "example": "https://example.com/hotel.jpg"
                },
                "name": {
                    "type": "string",
                    "example": "Grand Hotel Jakarta"
                }
            }
        },
        "handlers.CreateRoomRequest": {
            "type": "object",
            "required": [
                "capacity",
                "description",
                "hotel_id",
                "name"
            ],
            "properties": {
                "capacity": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 2
                },
                "description": {
                    "type": "string",
                    "example": "Kamar mewah dengan pemandangan kota"
                },
                "hotel_id": {
                    "type": "string",
                    "example": "60e6f3a89f48e1a8e8a8b123"
                },
                "image": {
                    "type": "string",
                    "example": "https://example.com/room.jpg"
                },
                "name": {
                    "type": "string",
                    "example": "Deluxe Room"
                }
            }
        },
        "handlers.DailyPointCost": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "Format YYYY-MM-DD",
                    "type": "string"
                },
                "day_type": {
                    "description": "\"regular\", \"weekend\", \"holiday\"",
                    "type": "string"
                },
                "name": {
                    "description": "Nama hari libur jika ada",
                    "type": "string"
                },
                "point_cost": {
                    "type": "integer"
                }
            }
        },
        "handlers.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handlers.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "handlers.RoomAvailabilityRequest": {
            "type": "object",
            "required": [
                "from_date",
                "room_id",
                "to_date"
            ],
            "properties": {
                "available": {
                    "type": "boolean",
                    "example": true
                },
                "from_date": {
                    "description": "Format YYYY-MM-DD",
                    "type": "string",
                    "example": "2025-06-01"
                },
                "room_id": {
                    "type": "string",
                    "example": "60e6f3a89f48e1a8e8a8b124"
                },
                "to_date": {
                    "description": "Format YYYY-MM-DD",
                    "type": "string",
                    "example": "2025-06-10"
                },
                "user_ids": {
                    "description": "Opsional, jika tidak diisi semua user bisa memesan",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "['60e6f3a89f48e1a8e8a8b125'",
                        " '60e6f3a89f48e1a8e8a8b126']"
                    ]
                }
            }
        },
        "handlers.SpecialDateRequest": {
            "type": "object",
            "required": [
                "date",
                "point_cost",
                "type"
            ],
            "properties": {
                "date": {
                    "description": "Format YYYY-MM-DD",
                    "type": "string",
                    "example": "2025-12-25"
                },
                "name": {
                    "type": "string",
                    "example": "Hari Natal"
                },
                "point_cost": {
                    "type": "integer",
                    "maximum": 3,
                    "minimum": 1,
                    "example": 3
                },
                "type": {
                    "description": "\"regular\", \"weekend\", \"holiday\"",
                    "type": "string",
                    "example": "holiday"
                }
            }
        },
        "handlers.UpdateHotelRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Updated address"
                },
                "city": {
                    "type": "string",
                    "example": "Updated city"
                },
                "description": {
                    "type": "string",
                    "example": "Updated description"
                },
                "image": {
                    "type": "string",
                    "example": "https://example.com/new-image.jpg"
                },
                "name": {
                    "type": "string",
                    "example": "New Hotel Name"
                }
            }
        },
        "handlers.UpdateRoomRequest": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer",
                    "example": 4
                },
                "description": {
                    "type": "string",
                    "example": "Updated room description"
                },
                "hotel_id": {
                    "type": "string",
                    "example": "60e6f3a89f48e1a8e8a8b123"
                },
                "image": {
                    "type": "string",
                    "example": "https://example.com/new-room.jpg"
                },
                "name": {
                    "type": "string",
                    "example": "Superior Room"
                }
            }
        },
        "models.Booking": {
            "type": "object",
            "properties": {
                "check_in": {
                    "type": "string"
                },
                "check_out": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "hotel_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "point_cost": {
                    "type": "integer"
                },
                "room_id": {
                    "type": "string"
                },
                "status": {
                    "description": "\"pending\", \"confirmed\", \"cancelled\"",
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Hotel": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "utils.APIErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid input parameter"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "utils.APISuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Operation successful"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Hotel Point API",
	Description:      "API untuk aplikasi pemesanan hotel berbasis point",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
